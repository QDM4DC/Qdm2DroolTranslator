       import java.util.Set;
        import java.util.Date;
        import java.util.Calendar;
        import edu.mayo.qdm.executor.drools.PreconditionResult;
        import edu.mayo.qdm.executor.ResultCallback;
        import edu.mayo.qdm.patient.Patient;
        import edu.mayo.qdm.patient.Concept;
        import edu.mayo.qdm.patient.Event;
        import edu.mayo.qdm.executor.drools.parser.criteria.Interval;
        import edu.mayo.qdm.executor.drools.parser.criteria.MeasurementValue;
        import edu.mayo.qdm.executor.drools.DroolsUtil;
        import edu.mayo.qdm.executor.MeasurementPeriod;
        import edu.mayo.qdm.executor.drools.SpecificOccurrence;
        import edu.mayo.qdm.executor.drools.SpecificOccurrenceResult;
        import edu.mayo.qdm.patient.MedicationStatus;
        import edu.mayo.qdm.patient.ProcedureStatus;
        import edu.mayo.qdm.executor.drools.PreconditionCollection;
        import function edu.mayo.qdm.executor.drools.DroolsUtil.toDays;
        /*
            ID: 0052
            Title: Use of Imaging Studies for Low Back Pain
            Description: Percentage of patients 18-50 years of age with a diagnosis of low back pain who did not have an imaging study (plain X-ray, MRI, CT scan) within 28 days of the diagnosis.
            HQMF Version: 2
            CMS ID: CMS166v2
        */

        global DroolsUtil droolsUtil
        global MeasurementPeriod measurementPeriod

        /* Rule */
        rule "DENEX"
            dialect "mvel"
            no-loop
            salience -1000

        when
            $p : Patient( )
            //not ( PreconditionResult(id == "DENEX", patient == $p) )

                                        PreconditionResult(id == "DENOM", patient == $p)


        PreconditionResult( id == "22", patient == $p )

        then
            insertLogical(new PreconditionResult("DENEX", $p, true))
        end

        /* Rule */
        rule "22"
            dialect "mvel"
            no-loop
            //salience 0
            //agenda-group "22"

        when
            $p : Patient( )
            //not ( PreconditionResult(id == "22", patient == $p) )

        PreconditionResult( id == "20", patient == $p, $context : context )

        then
            System.out.println("22");
            insertLogical(new PreconditionResult("22", $p, $context))
        end


        /* Rule */
        rule "20"
            dialect "mvel"
            no-loop
            //salience 0
            //agenda-group "20"

        when
            $p : Patient( )
            //not ( PreconditionResult(id == "20", patient == $p) )
        $preconditions : PreconditionResult(
                                    id == "2"  || id == "10"  || id == "18" , $context : context, patient == $p)
        then
            System.out.println("20");
            insertLogical(new PreconditionResult("20", $p, $context))
        end


        /* Rule */
        rule "2"
            dialect "mvel"
            no-loop
            //salience 0
            //agenda-group "2"

        when
            $p : Patient( )
            //not ( PreconditionResult(id == "2", patient == $p) )

        PreconditionResult( id == "DiagnosisActiveLowBackPain_precondition_2", patient == $p, $context : context )

        then
            System.out.println("2");
            insertLogical(new PreconditionResult("2", $p, $context))
        end


        /* Rule */
        rule "10"
            dialect "mvel"
            no-loop
            //salience -1
            //agenda-group "10"

        when
            $p : Patient( )
            //not ( PreconditionResult(id == "10", patient == $p) )
        $preconditions : PreconditionResult(
                                    id == "4"  || id == "6"  || id == "8" , $context : context, patient == $p)
        then
            System.out.println("10");
            insertLogical(new PreconditionResult("10", $p, $context))
        end


        /* Rule */
        rule "18"
            dialect "mvel"
            no-loop
            //salience -2
            //agenda-group "18"

        when
            $p : Patient( )
            //not ( PreconditionResult(id == "18", patient == $p) )
        $preconditions : PreconditionResult(
                                    id == "12"  || id == "14"  || id == "16" , $context : context, patient == $p)
        then
            System.out.println("18");
            insertLogical(new PreconditionResult("18", $p, $context))
        end


        /* Rule */
        rule "4"
            dialect "mvel"
            no-loop
            //salience 0
            //agenda-group "4"

        when
            $p : Patient( )
            //not ( PreconditionResult(id == "4", patient == $p) )

        PreconditionResult( id == "DiagnosisActiveAllCancer_precondition_4", patient == $p, $context : context )

        then
            System.out.println("4");
            insertLogical(new PreconditionResult("4", $p, $context))
        end


        /* Rule */
        rule "6"
            dialect "mvel"
            no-loop
            //salience -1
            //agenda-group "6"

        when
            $p : Patient( )
            //not ( PreconditionResult(id == "6", patient == $p) )

        PreconditionResult( id == "DiagnosisInactiveAllCancer_precondition_6", patient == $p, $context : context )

        then
            System.out.println("6");
            insertLogical(new PreconditionResult("6", $p, $context))
        end


        /* Rule */
        rule "8"
            dialect "mvel"
            no-loop
            //salience -2
            //agenda-group "8"

        when
            $p : Patient( )
            //not ( PreconditionResult(id == "8", patient == $p) )

        PreconditionResult( id == "DiagnosisResolvedAllCancer_precondition_8", patient == $p, $context : context )

        then
            System.out.println("8");
            insertLogical(new PreconditionResult("8", $p, $context))
        end


        /* Rule */
        rule "12"
            dialect "mvel"
            no-loop
            //salience 0
            //agenda-group "12"

        when
            $p : Patient( )
            //not ( PreconditionResult(id == "12", patient == $p) )

        PreconditionResult( id == "DiagnosisActiveTrauma_precondition_12", patient == $p, $context : context )

        then
            System.out.println("12");
            insertLogical(new PreconditionResult("12", $p, $context))
        end


        /* Rule */
        rule "14"
            dialect "mvel"
            no-loop
            //salience -1
            //agenda-group "14"

        when
            $p : Patient( )
            //not ( PreconditionResult(id == "14", patient == $p) )

        PreconditionResult( id == "DiagnosisActiveIvDrugAbuse_precondition_14", patient == $p, $context : context )

        then
            System.out.println("14");
            insertLogical(new PreconditionResult("14", $p, $context))
        end


        /* Rule */
        rule "16"
            dialect "mvel"
            no-loop
            //salience -2
            //agenda-group "16"

        when
            $p : Patient( )
            //not ( PreconditionResult(id == "16", patient == $p) )

        PreconditionResult( id == "DiagnosisActiveNeurologicImpairment_precondition_16", patient == $p, $context : context )

        then
            System.out.println("16");
            insertLogical(new PreconditionResult("16", $p, $context))
        end


        /* Rule */
        rule "NUMER"
            dialect "mvel"
            no-loop
            salience -1000

        when
            $p : Patient( )
            //not ( PreconditionResult(id == "NUMER", patient == $p) )

                                        PreconditionResult(id == "DENOM", patient == $p)
                                        not ( PreconditionResult(id == "DENEX", patient == $p) )

        not(
        PreconditionResult( id == "32", patient == $p )
        )
        then
            insertLogical(new PreconditionResult("NUMER", $p, true))
        end

        /* Rule */
        rule "32"
            dialect "mvel"
            no-loop
            //salience 0
            //agenda-group "32"

        when
            $p : Patient( )
            //not ( PreconditionResult(id == "32", patient == $p) )

        PreconditionResult( id == "29", patient == $p, $context : context )

        then
            System.out.println("32");
            insertLogical(new PreconditionResult("32", $p, $context))
        end


        /* Rule */
        rule "29"
            dialect "mvel"
            no-loop
            //salience 0
            //agenda-group "29"

        when
            $p : Patient( )
            //not ( PreconditionResult(id == "29", patient == $p) )
        $preconditions : PreconditionResult(
                                    id == "23"  || id == "25"  || id == "27" , $context : context, patient == $p)
        then
            System.out.println("29");
            insertLogical(new PreconditionResult("29", $p, $context))
        end


        /* Rule */
        rule "23"
            dialect "mvel"
            no-loop
            //salience 0
            //agenda-group "23"

        when
            $p : Patient( )
            //not ( PreconditionResult(id == "23", patient == $p) )

        PreconditionResult( id == "DiagnosticStudyPerformedXRayOfLowerSpine_precondition_23", patient == $p, $context : context )

        then
            System.out.println("23");
            insertLogical(new PreconditionResult("23", $p, $context))
        end


        /* Rule */
        rule "25"
            dialect "mvel"
            no-loop
            //salience -1
            //agenda-group "25"

        when
            $p : Patient( )
            //not ( PreconditionResult(id == "25", patient == $p) )

        PreconditionResult( id == "DiagnosticStudyPerformedMriOfLowerSpine_precondition_25", patient == $p, $context : context )

        then
            System.out.println("25");
            insertLogical(new PreconditionResult("25", $p, $context))
        end


        /* Rule */
        rule "27"
            dialect "mvel"
            no-loop
            //salience -2
            //agenda-group "27"

        when
            $p : Patient( )
            //not ( PreconditionResult(id == "27", patient == $p) )

        PreconditionResult( id == "DiagnosticStudyPerformedCtScanOfLowerSpine_precondition_27", patient == $p, $context : context )

        then
            System.out.println("27");
            insertLogical(new PreconditionResult("27", $p, $context))
        end


        /* Rule */
        rule "DENOM"
            dialect "mvel"
            no-loop
            salience -1000

        when
            $p : Patient( )
            //not ( PreconditionResult(id == "DENOM", patient == $p) )

                                        PreconditionResult(id == "IPP", patient == $p)


        then
            insertLogical(new PreconditionResult("DENOM", $p, true))
        end

        /* Rule */
        rule "IPP"
            dialect "mvel"
            no-loop
            salience -1000

        when
            $p : Patient( )
            //not ( PreconditionResult(id == "IPP", patient == $p) )


        PreconditionResult( id == "48", patient == $p )

        then
            insertLogical(new PreconditionResult("IPP", $p, true))
        end

        /* Rule */
        rule "48"
            dialect "mvel"
            no-loop
            //salience 0
            //agenda-group "48"

        when
            $p : Patient( )
            //not ( PreconditionResult(id == "48", patient == $p) )

        $p34: PreconditionResult( id == "34", patient == $p )

        $p36: PreconditionResult( id == "36", patient == $p )

        $p38: PreconditionResult( id == "38", patient == $p )

        $p46: PreconditionResult( id == "46", patient == $p )
        $context : java.util.Map() from droolsUtil.intersect([$p34.context,$p36.context,$p38.context,$p46.context])
                                    eval($p34.compatible($context))

                                    eval($p36.compatible($context))

                                    eval($p38.compatible($context))

                                    eval($p46.compatible($context))

        then
            System.out.println("48");
            insertLogical(new PreconditionResult("48", $p, $context))
        end


        /* Rule */
        rule "34"
            dialect "mvel"
            no-loop
            //salience 0
            //agenda-group "34"

        when
            $p : Patient( )
            //not ( PreconditionResult(id == "34", patient == $p) )

        PreconditionResult( id == "OccurrenceALowBackPain1_precondition_33", patient == $p, $context : context )

        then
            System.out.println("34");
            insertLogical(new PreconditionResult("34", $p, $context))
        end


        /* Rule */
        rule "36"
            dialect "mvel"
            no-loop
            //salience -1
            //agenda-group "36"

        when
            $p : Patient( )
            //not ( PreconditionResult(id == "36", patient == $p) )

        PreconditionResult( id == "PatientCharacteristicBirthdateBirthDate_precondition_36", patient == $p, $context : context )

        then
            System.out.println("36");
            insertLogical(new PreconditionResult("36", $p, $context))
        end


        /* Rule */
        rule "38"
            dialect "mvel"
            no-loop
            //salience -2
            //agenda-group "38"

        when
            $p : Patient( )
            //not ( PreconditionResult(id == "38", patient == $p) )

        PreconditionResult( id == "PatientCharacteristicBirthdateBirthDate_precondition_38", patient == $p, $context : context )

        then
            System.out.println("38");
            insertLogical(new PreconditionResult("38", $p, $context))
        end


        /* Rule */
        rule "46"
            dialect "mvel"
            no-loop
            //salience -3
            //agenda-group "46"

        when
            $p : Patient( )
            //not ( PreconditionResult(id == "46", patient == $p) )
        $preconditions : PreconditionResult(
                                    id == "41"  || id == "44" , $context : context, patient == $p)
        then
            System.out.println("46");
            insertLogical(new PreconditionResult("46", $p, $context))
        end


        /* Rule */
        rule "41"
            dialect "mvel"
            no-loop
            //salience 0
            //agenda-group "41"

        when
            $p : Patient( )
            //not ( PreconditionResult(id == "41", patient == $p) )

        PreconditionResult( id == "OccurrenceALowBackPain1_precondition_41", patient == $p, $context : context )

        then
            System.out.println("41");
            insertLogical(new PreconditionResult("41", $p, $context))
        end


        /* Rule */
        rule "44"
            dialect "mvel"
            no-loop
            //salience -1
            //agenda-group "44"

        when
            $p : Patient( )
            //not ( PreconditionResult(id == "44", patient == $p) )

        PreconditionResult( id == "OccurrenceALowBackPain1_precondition_44", patient == $p, $context : context )

        then
            System.out.println("44");
            insertLogical(new PreconditionResult("44", $p, $context))
        end


        /* Rule */
        rule "OccurrenceALowBackPain1"
            dialect "mvel"
            no-loop
            //agenda-group "generalDataCriteria"

        when

        $p : Patient ( )


        $event : edu.mayo.qdm.patient.Diagnosis(

        ) from droolsUtil.findMatches("2.16.840.1.113883.3.464.1003.113.12.1001", $p.getDiagnoses())




        then
            System.out.println("OccurrenceALowBackPain1");

        insertLogical(new PreconditionResult("OccurrenceALowBackPain1", $p, $event , new SpecificOccurrence("DIAGNOSIS_ACTIVE_LOW_BACK_PAIN", "A", $event)))

        end

        /* Rule */
        rule "PatientCharacteristicSexOncAdministrativeSex"
            dialect "mvel"
            no-loop
            //agenda-group "generalDataCriteria"

        when

        $p : Patient(
                true
        )


        then
            System.out.println("PatientCharacteristicSexOncAdministrativeSex");

        insertLogical(new PreconditionResult("PatientCharacteristicSexOncAdministrativeSex", $p))

        end

        /* Rule */
        rule "PatientCharacteristicRaceRace"
            dialect "mvel"
            no-loop
            //agenda-group "generalDataCriteria"

        when

        $p : Patient(
                eval(true)
        )


        then
            System.out.println("PatientCharacteristicRaceRace");

        insertLogical(new PreconditionResult("PatientCharacteristicRaceRace", $p))

        end

        /* Rule */
        rule "PatientCharacteristicEthnicityEthnicity"
            dialect "mvel"
            no-loop
            //agenda-group "generalDataCriteria"

        when

        $p : Patient(
                eval(true)
        )


        then
            System.out.println("PatientCharacteristicEthnicityEthnicity");

        insertLogical(new PreconditionResult("PatientCharacteristicEthnicityEthnicity", $p))

        end

        /* Rule */
        rule "PatientCharacteristicPayerPayer"
            dialect "mvel"
            no-loop
            //agenda-group "generalDataCriteria"

        when

        $p : Patient(
                eval(true)
        )


        then
            System.out.println("PatientCharacteristicPayerPayer");

        insertLogical(new PreconditionResult("PatientCharacteristicPayerPayer", $p))

        end

        /* Rule */
        rule "DiagnosisActiveLowBackPain_precondition_2"
            dialect "mvel"
            no-loop
            //agenda-group "generalDataCriteria"

        when

        $p : Patient ( )

        $OccurrenceALowBackPain1 : PreconditionResult(id == "OccurrenceALowBackPain1", patient == $p)
        $event : edu.mayo.qdm.patient.Diagnosis(

            $OccurrenceALowBackPain1.event != null,
            eval(! (this.equals($OccurrenceALowBackPain1.event))),
            toDays(startDate) >= toDays(droolsUtil.add(droolsUtil.getCalendar($OccurrenceALowBackPain1.event.startDate), Calendar.DATE, -180)),
startDate <= $OccurrenceALowBackPain1.event.startDate


        ) from droolsUtil.findMatches("2.16.840.1.113883.3.464.1003.113.12.1001", $p.getDiagnoses())




        then
            System.out.println("DiagnosisActiveLowBackPain_precondition_2");

        insertLogical(new PreconditionResult("DiagnosisActiveLowBackPain_precondition_2", $p, $event , droolsUtil.combine([$OccurrenceALowBackPain1.context])))

        end

        /* Rule */
        rule "DiagnosisActiveAllCancer_precondition_4"
            dialect "mvel"
            no-loop
            //agenda-group "generalDataCriteria"

        when

        $p : Patient ( )


        $event : edu.mayo.qdm.patient.Diagnosis(

                        startDate != null,
                        toDays(startDate) <= toDays(new Date('31-Dec-2012'))

        ) from droolsUtil.findMatches("2.16.840.1.113883.3.464.1003.108.12.1011", $p.getDiagnoses())




        then
            System.out.println("DiagnosisActiveAllCancer_precondition_4");

        insertLogical(new PreconditionResult("DiagnosisActiveAllCancer_precondition_4", $p, $event ))

        end

        /* Rule */
        rule "DiagnosisInactiveAllCancer_precondition_6"
            dialect "mvel"
            no-loop
            //agenda-group "generalDataCriteria"

        when

        $p : Patient ( )


        $event : edu.mayo.qdm.patient.Diagnosis(

                        startDate != null,
                        toDays(startDate) <= toDays(new Date('31-Dec-2012'))

        ) from droolsUtil.findMatches("2.16.840.1.113883.3.464.1003.108.12.1011", $p.getDiagnoses())




        then
            System.out.println("DiagnosisInactiveAllCancer_precondition_6");

        insertLogical(new PreconditionResult("DiagnosisInactiveAllCancer_precondition_6", $p, $event ))

        end

        /* Rule */
        rule "DiagnosisResolvedAllCancer_precondition_8"
            dialect "mvel"
            no-loop
            //agenda-group "generalDataCriteria"

        when

        $p : Patient ( )


        $event : edu.mayo.qdm.patient.Diagnosis(

                        startDate != null,
                        toDays(startDate) <= toDays(new Date('31-Dec-2012'))

        ) from droolsUtil.findMatches("2.16.840.1.113883.3.464.1003.108.12.1011", $p.getDiagnoses())




        then
            System.out.println("DiagnosisResolvedAllCancer_precondition_8");

        insertLogical(new PreconditionResult("DiagnosisResolvedAllCancer_precondition_8", $p, $event ))

        end

        /* Rule */
        rule "DiagnosisActiveTrauma_precondition_12"
            dialect "mvel"
            no-loop
            //agenda-group "generalDataCriteria"

        when

        $p : Patient ( )


        $event : edu.mayo.qdm.patient.Diagnosis(

                        startDate != null,
                        toDays(startDate) > toDays(new Date('31-Dec-2011')),
                        toDays(startDate) <= toDays(new Date("31-Dec-2012"))

        ) from droolsUtil.findMatches("2.16.840.1.113883.3.464.1003.113.12.1036", $p.getDiagnoses())




        then
            System.out.println("DiagnosisActiveTrauma_precondition_12");

        insertLogical(new PreconditionResult("DiagnosisActiveTrauma_precondition_12", $p, $event ))

        end

        /* Rule */
        rule "DiagnosisActiveIvDrugAbuse_precondition_14"
            dialect "mvel"
            no-loop
            //agenda-group "generalDataCriteria"

        when

        $p : Patient ( )


        $event : edu.mayo.qdm.patient.Diagnosis(

                        startDate != null,
                        toDays(startDate) > toDays(new Date('31-Dec-2011')),
                        toDays(startDate) <= toDays(new Date("31-Dec-2012"))

        ) from droolsUtil.findMatches("2.16.840.1.113883.3.464.1003.106.12.1003", $p.getDiagnoses())




        then
            System.out.println("DiagnosisActiveIvDrugAbuse_precondition_14");

        insertLogical(new PreconditionResult("DiagnosisActiveIvDrugAbuse_precondition_14", $p, $event ))

        end

        /* Rule */
        rule "DiagnosisActiveNeurologicImpairment_precondition_16"
            dialect "mvel"
            no-loop
            //agenda-group "generalDataCriteria"

        when

        $p : Patient ( )


        $event : edu.mayo.qdm.patient.Diagnosis(

                        startDate != null,
                        toDays(startDate) > toDays(new Date('31-Dec-2011')),
                        toDays(startDate) <= toDays(new Date("31-Dec-2012"))

        ) from droolsUtil.findMatches("2.16.840.1.113883.3.464.1003.114.12.1012", $p.getDiagnoses())




        then
            System.out.println("DiagnosisActiveNeurologicImpairment_precondition_16");

        insertLogical(new PreconditionResult("DiagnosisActiveNeurologicImpairment_precondition_16", $p, $event ))

        end

        /* Rule */
        rule "OccurrenceALowBackPain1_precondition_30"
            dialect "mvel"
            no-loop
            //agenda-group "generalDataCriteria"

        when

        $p : Patient ( )


        $event : edu.mayo.qdm.patient.Diagnosis(

        ) from droolsUtil.findMatches("2.16.840.1.113883.3.464.1003.113.12.1001", $p.getDiagnoses())




        then
            System.out.println("OccurrenceALowBackPain1_precondition_30");

        insertLogical(new PreconditionResult("OccurrenceALowBackPain1_precondition_30", $p, $event , new SpecificOccurrence("DIAGNOSIS_ACTIVE_LOW_BACK_PAIN", "A", $event)))

        end

        /* Rule */
        rule "DiagnosticStudyPerformedXRayOfLowerSpine_precondition_23"
            dialect "mvel"
            no-loop
            //agenda-group "generalDataCriteria"

        when

        $p : Patient ( )

        $OccurrenceALowBackPain1_precondition_30 : PreconditionResult(id == "OccurrenceALowBackPain1_precondition_30", patient == $p)
        $event : edu.mayo.qdm.patient.DiagnosticStudy(

            $OccurrenceALowBackPain1_precondition_30.event != null,
            eval(! (this.equals($OccurrenceALowBackPain1_precondition_30.event))),
            toDays(startDate) <= toDays(droolsUtil.add(droolsUtil.getCalendar($OccurrenceALowBackPain1_precondition_30.event.startDate), Calendar.DATE, 28)),
startDate >= $OccurrenceALowBackPain1_precondition_30.event.startDate


        ) from droolsUtil.findMatches("2.16.840.1.113883.3.464.1003.113.12.1033", $p.getDiagnosticStudies())




        then
            System.out.println("DiagnosticStudyPerformedXRayOfLowerSpine_precondition_23");

        insertLogical(new PreconditionResult("DiagnosticStudyPerformedXRayOfLowerSpine_precondition_23", $p, $event , droolsUtil.combine([$OccurrenceALowBackPain1_precondition_30.context])))

        end

        /* Rule */
        rule "DiagnosticStudyPerformedMriOfLowerSpine_precondition_25"
            dialect "mvel"
            no-loop
            //agenda-group "generalDataCriteria"

        when

        $p : Patient ( )

        $OccurrenceALowBackPain1_precondition_30 : PreconditionResult(id == "OccurrenceALowBackPain1_precondition_30", patient == $p)
        $event : edu.mayo.qdm.patient.DiagnosticStudy(

            $OccurrenceALowBackPain1_precondition_30.event != null,
            eval(! (this.equals($OccurrenceALowBackPain1_precondition_30.event))),
            toDays(startDate) <= toDays(droolsUtil.add(droolsUtil.getCalendar($OccurrenceALowBackPain1_precondition_30.event.startDate), Calendar.DATE, 28)),
startDate >= $OccurrenceALowBackPain1_precondition_30.event.startDate


        ) from droolsUtil.findMatches("2.16.840.1.113883.3.464.1003.113.12.1034", $p.getDiagnosticStudies())




        then
            System.out.println("DiagnosticStudyPerformedMriOfLowerSpine_precondition_25");

        insertLogical(new PreconditionResult("DiagnosticStudyPerformedMriOfLowerSpine_precondition_25", $p, $event , droolsUtil.combine([$OccurrenceALowBackPain1_precondition_30.context])))

        end

        /* Rule */
        rule "DiagnosticStudyPerformedCtScanOfLowerSpine_precondition_27"
            dialect "mvel"
            no-loop
            //agenda-group "generalDataCriteria"

        when

        $p : Patient ( )

        $OccurrenceALowBackPain1_precondition_30 : PreconditionResult(id == "OccurrenceALowBackPain1_precondition_30", patient == $p)
        $event : edu.mayo.qdm.patient.DiagnosticStudy(

            $OccurrenceALowBackPain1_precondition_30.event != null,
            eval(! (this.equals($OccurrenceALowBackPain1_precondition_30.event))),
            toDays(startDate) <= toDays(droolsUtil.add(droolsUtil.getCalendar($OccurrenceALowBackPain1_precondition_30.event.startDate), Calendar.DATE, 28)),
startDate >= $OccurrenceALowBackPain1_precondition_30.event.startDate


        ) from droolsUtil.findMatches("2.16.840.1.113883.3.464.1003.113.12.1035", $p.getDiagnosticStudies())




        then
            System.out.println("DiagnosticStudyPerformedCtScanOfLowerSpine_precondition_27");

        insertLogical(new PreconditionResult("DiagnosticStudyPerformedCtScanOfLowerSpine_precondition_27", $p, $event , droolsUtil.combine([$OccurrenceALowBackPain1_precondition_30.context])))

        end

        /* Rule */
        rule "OccurrenceALowBackPain1_precondition_33"
            dialect "mvel"
            no-loop
            //agenda-group "generalDataCriteria"

        when

        $p : Patient ( )


        $event : edu.mayo.qdm.patient.Diagnosis(


                        startDate != null,
                        toDays(startDate) >= toDays(new Date('01-Jan-2012'))
                        ,

                        startDate != null,
                        toDays(startDate) <= toDays(new Date('31-Dec-2012'))


        ) from droolsUtil.findMatches("2.16.840.1.113883.3.464.1003.113.12.1001", $p.getDiagnoses())




        then
            System.out.println("OccurrenceALowBackPain1_precondition_33");

        insertLogical(new PreconditionResult("OccurrenceALowBackPain1_precondition_33", $p, $event , new SpecificOccurrence("DIAGNOSIS_ACTIVE_LOW_BACK_PAIN", "A", $event)))

        end

        /* Rule */
        rule "PatientCharacteristicBirthdateBirthDate_precondition_36"
            dialect "mvel"
            no-loop
            //agenda-group "generalDataCriteria"

        when

        $p : Patient( )


                Patient(
                    this == $p,

                        birthdate != null,
                        toDays(birthdate) < toDays(new Date('01-Jan-1994'))

                )



        then
            System.out.println("PatientCharacteristicBirthdateBirthDate_precondition_36");

        insertLogical(new PreconditionResult("PatientCharacteristicBirthdateBirthDate_precondition_36", $p, new Event(null, $p.birthdate)))

        end

        /* Rule */
        rule "PatientCharacteristicBirthdateBirthDate_precondition_38"
            dialect "mvel"
            no-loop
            //agenda-group "generalDataCriteria"

        when

        $p : Patient( )


                Patient(
                    this == $p,

                        birthdate != null,
                        toDays(birthdate) > toDays(new Date('01-Jan-1961')),
                        toDays(birthdate) <= toDays(new Date("01-Jan-2012"))

                )



        then
            System.out.println("PatientCharacteristicBirthdateBirthDate_precondition_38");

        insertLogical(new PreconditionResult("PatientCharacteristicBirthdateBirthDate_precondition_38", $p, new Event(null, $p.birthdate)))

        end

        /* Rule */
        rule "EncounterPerformedOfficeVisit_precondition_40"
            dialect "mvel"
            no-loop
            //agenda-group "generalDataCriteria"

        when

        $p : Patient ( )


        $event : edu.mayo.qdm.patient.Encounter(

                        startDate != null,
                        toDays(startDate) < toDays(new Date('04-Dec-2012')),
                        toDays(startDate) >= toDays(new Date("01-Jan-2012"))

        ) from droolsUtil.findMatches("2.16.840.1.113883.3.464.1003.101.12.1001", $p.getEncounters())




        then
            System.out.println("EncounterPerformedOfficeVisit_precondition_40");

        insertLogical(new PreconditionResult("EncounterPerformedOfficeVisit_precondition_40", $p, $event ))

        end

        /* Rule */
        rule "OccurrenceALowBackPain1_precondition_41"
            dialect "mvel"
            no-loop
            //agenda-group "generalDataCriteria"

        when

        $p : Patient ( )

        $EncounterPerformedOfficeVisit_precondition_40 : PreconditionResult(id == "EncounterPerformedOfficeVisit_precondition_40", patient == $p)
        $event : edu.mayo.qdm.patient.Diagnosis(


            $EncounterPerformedOfficeVisit_precondition_40.event != null,
            eval(! (this.equals($EncounterPerformedOfficeVisit_precondition_40.event))),
            startDate >= $EncounterPerformedOfficeVisit_precondition_40.event.startDate
            ,

            $EncounterPerformedOfficeVisit_precondition_40.event != null,
            eval(! (this.equals($EncounterPerformedOfficeVisit_precondition_40.event))),
            startDate <= $EncounterPerformedOfficeVisit_precondition_40.event.endDate


        ) from droolsUtil.findMatches("2.16.840.1.113883.3.464.1003.113.12.1001", $p.getDiagnoses())




        then
            System.out.println("OccurrenceALowBackPain1_precondition_41");

        insertLogical(new PreconditionResult("OccurrenceALowBackPain1_precondition_41", $p, $event , droolsUtil.combine([$EncounterPerformedOfficeVisit_precondition_40.context], new SpecificOccurrence("DIAGNOSIS_ACTIVE_LOW_BACK_PAIN", "A", $event))))

        end

        /* Rule */
        rule "EncounterPerformedEmergencyDepartmentVisit_precondition_43"
            dialect "mvel"
            no-loop
            //agenda-group "generalDataCriteria"

        when

        $p : Patient ( )


        $event : edu.mayo.qdm.patient.Encounter(

                        startDate != null,
                        toDays(startDate) < toDays(new Date('04-Dec-2012')),
                        toDays(startDate) >= toDays(new Date("01-Jan-2012"))

        ) from droolsUtil.findMatches("2.16.840.1.113883.3.464.1003.101.12.1010", $p.getEncounters())




        then
            System.out.println("EncounterPerformedEmergencyDepartmentVisit_precondition_43");

        insertLogical(new PreconditionResult("EncounterPerformedEmergencyDepartmentVisit_precondition_43", $p, $event ))

        end

        /* Rule */
        rule "OccurrenceALowBackPain1_precondition_44"
            dialect "mvel"
            no-loop
            //agenda-group "generalDataCriteria"

        when

        $p : Patient ( )

        $EncounterPerformedEmergencyDepartmentVisit_precondition_43 : PreconditionResult(id == "EncounterPerformedEmergencyDepartmentVisit_precondition_43", patient == $p)
        $event : edu.mayo.qdm.patient.Diagnosis(


            $EncounterPerformedEmergencyDepartmentVisit_precondition_43.event != null,
            eval(! (this.equals($EncounterPerformedEmergencyDepartmentVisit_precondition_43.event))),
            startDate >= $EncounterPerformedEmergencyDepartmentVisit_precondition_43.event.startDate
            ,

            $EncounterPerformedEmergencyDepartmentVisit_precondition_43.event != null,
            eval(! (this.equals($EncounterPerformedEmergencyDepartmentVisit_precondition_43.event))),
            startDate <= $EncounterPerformedEmergencyDepartmentVisit_precondition_43.event.endDate


        ) from droolsUtil.findMatches("2.16.840.1.113883.3.464.1003.113.12.1001", $p.getDiagnoses())




        then
            System.out.println("OccurrenceALowBackPain1_precondition_44");

        insertLogical(new PreconditionResult("OccurrenceALowBackPain1_precondition_44", $p, $event , droolsUtil.combine([$EncounterPerformedEmergencyDepartmentVisit_precondition_43.context], new SpecificOccurrence("DIAGNOSIS_ACTIVE_LOW_BACK_PAIN", "A", $event))))

        end