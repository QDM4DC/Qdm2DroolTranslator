import edu.mayo.qdm.executor.drools.PreconditionResult;

import edu.mayo.qdm.patient.*;
import java.util.List;
import edu.mayo.qdm.executor.drools.DroolsUtil
import java.util.Iterator;
import edu.mayo.qdm.executor.drools.SpecificOccurrence
import java.util.Calendar;

global DroolsUtil droolsUtil


rule "2"
      dialect "mvel"
      agenda-group "2"
  when

    $p : Patient( )

    $lab : Lab ( ) from $p.labs

  then
      insert( new PreconditionResult("2", $p, $lab))
      System.out.println("Rule 2");

end

rule "3"
      dialect "mvel"
      agenda-group "3"
  when

    $p : Patient( )

    $r : PreconditionResult(id == "2", patient == $p)
    $lab : Lab(
        endDate > "01-Jan-3000",
        this == $r.event
    ) from $p.labs

  then
      insert( new PreconditionResult("3", $p, $lab))
      System.out.println("Rule 3");

end

rule "4"
      dialect "mvel"
      agenda-group "4"
  when
    $p : Patient( )

    $r : PreconditionResult(id == "4", patient == $p)

    $lab : Lab(
        this == $r.event,
        startDate < "01-Jan-2000"
    ) from $p.labs

  then
      System.out.println("Rule 4");

end

rule "TEST 2"
      dialect "mvel"
      agenda-group "1"
      salience 2000
  when

  then
      System.out.println("HERE2!!!!!");

end

rule "TEST 1"
      dialect "mvel"
      agenda-group "1"
      salience 11000
  when

  then
      System.out.println("HERE1!!!!!");

end


rule "RECENT"
      dialect "mvel"
  when
      $p : Patient( )

      $total : Long() from accumulate(
      Lab( $startDate : startDate ) from $p.labs,
      max( $startDate.time ) )


      $lab2 : Lab( startDate.time == $total ) from $p.labs
  then
    System.out.println("RECENT!!!!!" + $total.toString() );

end